name: CI Workflow

on:
  pull_request:
    branches:
      - main  # or the branch you want to monitor for merge requests
  push:
    branches:
      - main  # or the branch you want to trigger builds for
    tags:
      - '*'  # Trigger for all tags

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19'

      - name: Install dependencies
        run: npm ci --force

      - name: Lint
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment"
          # Add deployment logic here, e.g., kubectl, or specific deployment scripts

  validate:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate deployment
        run: |
          echo "Validating deployment"
          # Add validation logic here, e.g., curl to check if services are up, etc.

  runway_staging:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Runway Staging Deployment
        uses: runway-io/runwayctl@v3
        with:
          runway_service_id: code-context
          image: ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          runway_version: v3.46.1

  runway_production:
    runs-on: ubuntu-latest
    needs: runway_staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Runway Production Deployment
        uses: runway-io/runwayctl@v3
        with:
          runway_service_id: code-context
          image: ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          runway_version: v3.46.1

